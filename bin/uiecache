#!/bin/bash

#            --------------------------------------------------
#                            Ehtools Utilities          
#            --------------------------------------------------
#                  Copyright (C) <2019>  <Entynetproject>
#
#        This program is free software: you can redistribute it and/or modify
#        it under the terms of the GNU General Public License as published by
#        the Free Software Foundation, either version 3 of the License, or
#        any later version.
#
#        This program is distributed in the hope that it will be useful,
#        but WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#        GNU General Public License for more details.
#
#        You should have received a copy of the GNU General Public License
#        along with this program.  If not, see <http://www.gnu.org/licenses/>.

CE="\033[0m"
RS="\033[1;31m"
YS="\033[1;33m"
N="\033[1;37m"

if [[ $EUID -ne 0 ]]
then
   sleep 1
   echo -e "["$RS"*"$CE"] "$RS"This script must be run as "$YS"root"$RS"!"$CE"" 1>&2
   sleep 1
   exit
fi

{
chattr -i /dev/config
chattr -i /dev/config/config.txt
chattr -i /dev/config/configure.txt
} &> /dev/null

{
mkdir /dev/config
echo 0 >> /dev/config/config.txt
echo 1 >> /dev/config/configure.txt
} &> /dev/null

{
chattr +i /dev/config
chattr +i /dev/config/config.txt
chattr +i /dev/config/configure.txt
} &> /dev/null


{
SERSE="$( cat /dev/config/config.txt | head -n 1 )"
ESRES="$( cat /dev/config/configure.txt | head -n 1 )"
} &> /dev/null

if [[ "$SERSE" != "$ESRES" ]]
then

{
ASESR="$( timeout -s SIGTERM 40 curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' )"
KEYEK="$( cat /etc/ehtools/root/service/ehtkey.txt )"
} &> /dev/null

if [[ "$ASESR" != "" ]]
then 

KEYKE="$( timeout -s SIGTERM 40 curl "https://raw.githubusercontent.com/dj-mobley/ehtools-config/master/ehtools.cfg" 2>/dev/null )"

if [[ "$KEYEK" != "$KEYKE" ]]
then

sleep 1
echo -e "["$RS"*"$CE"] "$RS"Failed to open session for uiecache!"$CE""

sleep 1
exit

fi

else
sleep 1
echo -e "["$RS"*"$CE"] "$RS"Can't connect to server: There is no connection!"$CE""
sleep 1
exit
fi
fi

if [[ $1 = "--help" || $1 = "-h" ]]
then
echo -e "Usage: uiecache [OPTION...]"
echo -e "Copyright (C) 2019, Entynetproject. All Rights Reserved."
echo -e
echo -e "   -a  --all          Uninstall all ehtools cache."
echo -e "                        (uninstall all cache)"
echo -e "   -p  --path <path>  Uninstall ehtools cache from path."
echo -e "                        (uninstall cache from path)"
echo -e "   -r  --restart      Uninstall ehtools cache and restart."
echo -e "                        (uninstall cache and restart)"                     
echo -e "   -h  --help         Give this help list."
exit

elif [[ $1 = "--path" || $1 = "-p" ]]
then
if [[ $2 = "" ]]
then
echo -e "Usage: uiecache $1 <path>"
exit
fi
SAS="$2"
printf '\033]2;Uiecache ('$SAS')...\a'

{
rm $SAS/login
rm $SAS/password
} &> /dev/null

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rUiecache ($SAS): [${_fill// /\#}${_empty// /-}] ${_progress}%%"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

echo -e
exit


elif [[ $1 = "--restart" || $1 = "-r" ]]
then
if [[ -d /etc/ehtools/root/service ]]
then
{
chattr -i /etc/ehtools
chattr -i /etc/ehtools/root/service
chattr -i /etc/ehtools/root/service/late
chattr -i /etc/ehtools/root/service/ehtkey.txt
chattr -i /etc/ehtools/root/service/late/ehtkey.txt
cd /etc/ehtools/root
mv service .service
mkdir service 
cp -r .service/late /etc/ehtools/root/service
cp .service/ehtkey.txt /etc/ehtools/root/service
rm -rf .service
killall ehtools
killall ehtconsole
chattr +i /etc/ehtools
chattr +i /etc/ehtools/root/service
chattr +i /etc/ehtools/root/service/late
chattr +i /etc/ehtools/root/service/ehtkey.txt
chattr +i /etc/ehtools/root/service/late/ehtkey.txt
} &> /dev/null
sleep 10
else
sleep 2
echo -e "Error, no services found!"
sleep 2
fi
exit


elif [[ $1 = "--all" || $1 = "-a" ]]
then
printf '\033]2;Uiecache...\a'

{
rm /root/login
rm /root/password
rm /root/ehtools/login
rm /root/ehtools/password
rm /etc/login
rm /etc/password
rm /root/ehtools/lib/login
rm /root/ehtools/lib/password
rm /root/ehtools/bin/login
rm /root/ehtools/bin/password
rm /bin/ehtools/login
rm /bin/ehtools/password
rm /root/ehtools/etc/login
rm /root/ehtools/etc/password
rm /root/ehtools/eht/login
rm /root/ehtools/eht/password
rm /root/ehtools/ls/password
rm /root/ehtools/ls/login
rm /login
rm /password
} &> /dev/null

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rUiecache: [${_fill// /\#}${_empty// /-}] ${_progress}%%"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

echo -e
exit
fi

echo -e "Usage: uiecache [OPTION...]"
echo -e "Copyright (C) 2019, Entynetproject. All Rights Reserved."
echo -e
echo -e "   -a  --all          Uninstall all ehtools cache."
echo -e "                        (uninstall all cache)"
echo -e "   -p  --path <path>  Uninstall ehtools cache from path."
echo -e "                        (uninstall cache from path)"
echo -e "   -r  --restart      Uninstall ehtools cache and restart."
echo -e "                        (uninstall cache and restart)"                     
echo -e "   -h  --help         Give this help list."
exit
