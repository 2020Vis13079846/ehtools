#! /bin/bash

# 
#            --------------------------------------------------
#                            Ehtools Utilities          
#            --------------------------------------------------
#          Copyright (C) <2015>  <Entynetproject (Ivan Nikolsky)>
#
#        This program is free software: you can redistribute it and/or modify
#        it under the terms of the GNU General Public License as published by
#        the Free Software Foundation, either version 3 of the License, or
#        any later version.
#
#        This program is distributed in the hope that it will be useful,
#        but WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#        GNU General Public License for more details.
#
#        You should have received a copy of the GNU General Public License
#        along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
#    About Author :   
#    Founder   : Entynetproject (Ivan Nikolsky)
#    Site      : http://entynetproject.simplesite.com/
#    Instagram : @entynetproject 
#    Twitter   : @entynetproject
#    Email     : entynetproject@gmail.com
#

CE="\e[0m"
RS="\e[1;31m"
YS="\e[1;33m"
N="\e[1;37m"

WHO="$( whoami )"

if [[ "$WHO" != "root" ]]
then
sleep 1
echo -e "$RS"run it as"$CE" "$YS"root"$CE"
sleep 1
echo -e "$RS"or use"$CE" "$YS"sudo"$CE"
sleep 1
exit
fi

{
chattr -i /tmp/config
chattr -i /tmp/config/config.txt
chattr -i /tmp/config/configure.txt
} &> /dev/null

{
mkdir /tmp/config
echo 0 >> /tmp/config/config.txt
echo 1 >> /tmp/config/configure.txt
} &> /dev/null

{
chattr +i /tmp/config
chattr +i /tmp/config/config.txt
chattr +i /tmp/config/configure.txt
} &> /dev/null


{
SERSE="$( cat /tmp/config/config.txt | head -n 1 )"
ESRES="$( cat /tmp/config/configure.txt | head -n 1 )"
} &> /dev/null

if [[ "$SERSE" != "$ESRES" ]]
then

{
ASESR="$( timeout -s SIGTERM 40 curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//' )"
KEYEK="$( cat /etc/ehtools/root/service/ehtkey.txt )"
} &> /dev/null

if [[ "$ASESR" != "" ]]
then 

KEYKE="$( timeout -s SIGTERM 40 curl "https://raw.githubusercontent.com/entynetproject/ECLI/master/hello.txt" 2>/dev/null )"

if [[ "$KEYEK" != "$KEYKE" ]]
then

sleep 1
echo -e "["$RS"*"$CE"] "$RS"Failed to open session for modules!"$CE""
sleep 1
echo -e "("$YS"it's may be caused by the fact that you have not bought ehtools or by bad internet connection!"$CE")"
sleep 1
exit

fi

else
sleep 1
echo -e "["$RS"*"$CE"] "$RS"Can't connect with server: There is no connection!"$CE""
sleep 1
exit
fi
fi

if [[ $1 = "--help" || $1 = "-h" ]]
then
echo -e
echo -e ""$N" INFO: Modules v1.9 is a" 
echo -e ""$N" sandbox for ehtools modules."$CE""
echo -e
echo -e "Usage: modules [OPTION...]"
echo -e "Copyright (C) 2019, Entynetproject. All Rights Reserved."
echo -e
echo -e "   --install         Install ehtools modules to /bin."
echo -e "                       (install ehtools modules)"
echo -e "   --restore <name>  Restore saved ehtools modules snapshot."
echo -e "                       (restore ehtools modules snapshot)"
echo -e "   --take    <name>  Take new ehtools modules snapshot."
echo -e "                       (take ehtools modules snapshot)"
echo -e "   --help            Give this help list."
echo -e
exit

elif [[ $1 = "--restore" || $1 = "-r" ]]
then
if [[ -d /etc/ehtools/modules ]]
then
if [[ ! -d /etc/ehtools/modules/snapshots ]]
then
sleep 3
echo -e "Error, snapshots directory is not found!"
sleep 1
echo -e "Making /etc/ehtools/modules/snapshots..."
mkdir /etc/ehtools/modules/snapshots
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 1
exit
fi
if [[ -d /etc/ehtools/modules/snapshots/$2 ]]
then
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\e[4;32mPreparing to restore snapshot: $2...\e[0m"
sleep 1
printf '\033]2;Restoring...\a'

function ProgressBark {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rRestoring (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBark ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
{
cd /root/ehtools
cd lib
chmod +x libunlogin
./libunlogin
chmod +x libunchattr
./libunchattr
chmod +x libunconf
./libunconf
rm -r /bin/ehtools
cp -r /etc/ehtools/modules/snapshots/$2/ehtools /bin
rm -r /root/ehtools/eht
cp -r /etc/ehtools/modules/snapshots/$2/eht /root/ehtools
chmod +x /bin/ehtools/eht1
chmod +x /bin/ehtools/eht2
chmod +x /bin/ehtools/eht3
chmod +x /bin/ehtools/eht4
chmod +x /bin/ehtools/eht21
chmod +x /bin/ehtools/eht31
chmod +x /bin/ehtools/eht41
chmod +x /bin/ehtools/eht42
chmod +x /bin/ehtools/eht43
rm /bin/eht1
rm /bin/eht2
rm /bin/eht3
rm /bin/eht31
rm /bin/eht4
rm /bin/eht41
rm /bin/eht42
rm /bin/eht43
rm /bin/eht21
cp /etc/ehtools/modules/snapshots/$2/eht/eht1 /bin
chmod +x /bin/eht1
cp /etc/ehtools/modules/snapshots/$2/eht/eht2 /bin
chmod +x /bin/eht2
cp /etc/ehtools/modules/snapshots/$2/eht/eht3 /bin
chmod +x /bin/eht3
cp /etc/ehtools/modules/snapshots/$2/eht/eht31 /bin
chmod +x /bin/eht31
cp /etc/ehtools/modules/snapshots/$2/eht/eht4 /bin
chmod +x /bin/eht4
cp /etc/ehtools/modules/snapshots/$2/eht/eht41 /bin
chmod +x /bin/eht41
cp /etc/ehtools/modules/snapshots/$2/eht/eht42 /bin
chmod +x /bin/eht42
cp /etc/ehtools/modules/snapshots/$2/eht/eht43 /bin
chmod +x /bin/eht43
cp /etc/ehtools/modules/snapshots/$2/eht/eht21 /bin
chmod +x /bin/eht21
cd /root/ehtools
cd lib
chmod +x liblogin
./liblogin
chmod +x libchattr
./libchattr
chmod +x libconf
./libconf
} &> /dev/null
sleep 2
echo -e "\e[4;32mSuccess!\e[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
else
sleep 3
echo -e "Error, snapshot $2 is not found!"
sleep 1
exit
fi
else
sleep 3
echo -e "Error, modules is not installed!"
sleep 1
exit
fi

elif [[ $1 = "--take" || $1 = "-t" ]]
then
if [[ -d /etc/ehtools/modules ]]
then
if [[ ! -d /etc/ehtools/modules/snapshots ]]
then
sleep 3
echo -e "Error, snapshots directory is not found!"
sleep 1
echo -e "Making /etc/ehtools/modules/snapshots..."
mkdir /etc/ehtools/modules/snapshots
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 1
exit
fi
if [[ -d /etc/ehtools/modules/snapshots/$2 ]]
then
sleep 3
echo -e "Error, snapshot $2 is already taken!"
sleep 1
exit
else
clear
sleep 3
echo -e "Well, we are going to start!"
sleep 2
echo -e "\e[4;32mPreparing to take snapshot: $2...\e[0m"
sleep 1
printf '\033]2;Taking...\a'

function ProgressBarks {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rTaking (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarks ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
echo -e "Making /etc/ehtools/modules/snapshots/$2..."
mkdir /etc/ehtools/modules/snapshots/$2
sleep 0.5
echo -e "Trying to take snapshot of /root/ehtools/eht..."
cp -r /root/ehtools/eht /etc/ehtools/modules/snapshots/$2
sleep 0.5
echo -e "Trying to take snapshot of /bin/ehtools..."
cp -r /bin/ehtools /etc/ehtools/modules/snapshots/$2
chmod +t /etc/ehtools/modules/snapshots
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 0.5
echo -e "Snapshot 1: \e[4;32m/etc/ehtools/modules/snapshots/$2/eht\e[0m"
echo -e "Snapshot 2: \e[4;32m/etc/ehtools/modules/snapshots/$2/ehtools\e[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
fi
else
sleep 3
echo -e "Error, modules is not installed!"
sleep 1
exit
fi


elif [[ $1 = "--install" || $1 = "-i" ]]
then
clear
sleep 3
printf '\033]2;Modules v1.9\a'
echo -e "          ____   "
echo -e "Modules  /\___\  "
echo -e "v1.9    /\ \___\ "
echo -e "for     \ \/ / / "
echo -e "ehtools  \/_/_/  By Ivan Nikolsky "
sleep 3
echo -e "Welcome to Modules v1.9 for ehtools"
sleep 1
echo -e "Instrument to add ehtools modules to /bin"
sleep 1
echo -e "This is a sandbox for ehtools modules"
sleep 1
echo -e "Press \e[1;33many key\e[0m to install modules"
read -n 1
clear
echo -e "Well, we are going to start!"
sleep 2
echo -e "\e[4;32mPreparing to install...\e[0m"
sleep 1
printf '\033]2;Installing...\a'

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rGetting (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

sleep 5
echo -e
sleep 0.3
echo -e "10 tar archives installed to /bin with success!"
sleep 0.2
echo -e "\e[4;32mPreparing to unpack...\e[0m"
sleep 2
echo -e "\e[4;32mSuccess!\e[0m"
sleep 0.5
chmod +x /root/ehtools/eht/eht1
chmod +x /root/ehtools/eht/eht2
chmod +x /root/ehtools/eht/eht3
chmod +x /root/ehtools/eht/eht21
chmod +x /root/ehtools/eht/eht31
chmod +x /root/ehtools/eht/eht4
chmod +x /root/ehtools/eht/eht41
chmod +x /root/ehtools/eht/eht42
chmod +x /root/ehtools/eht/eht43
chmod +x /root/ehtools/bin/euh
sleep 0.5 
echo -e "Setting up permissions..."
sleep 0.5
echo -e "Moving ehtools modules to /bin..."
sleep 0.5
cp /root/ehtools/eht/eht1 /bin/ehtools
cp /root/ehtools/eht/eht2 /bin/ehtools
cp /root/ehtools/eht/eht3 /bin/ehtools
cp /root/ehtools/eht/eht4 /bin/ehtools
cp /root/ehtools/eht/eht21 /bin/ehtools
cp /root/ehtools/eht/eht31 /bin/ehtools
cp /root/ehtools/eht/eht41 /bin/ehtools
cp /root/ehtools/eht/eht42 /bin/ehtools
cp /root/ehtools/eht/eht43 /bin/ehtools
chmod +x /bin/ehtools/eht1
chmod +x /bin/ehtools/eht2
chmod +x /bin/ehtools/eht3
chmod +x /bin/ehtools/eht4
chmod +x /bin/ehtools/eht21
chmod +x /bin/ehtools/eht31
chmod +x /bin/ehtools/eht41
chmod +x /bin/ehtools/eht42
chmod +x /bin/ehtools/eht43
cp /root/ehtools/eht/eht1 /bin
chmod +x /bin/eht1
cp /root/ehtools/eht/eht2 /bin
chmod +x /bin/eht2
cp /root/ehtools/eht/eht3 /bin
chmod +x /bin/eht3
cp /root/ehtools/eht/eht31 /bin
chmod +x /bin/eht31
cp /root/ehtools/eht/eht4 /bin
chmod +x /bin/eht4
cp /root/ehtools/eht/eht41 /bin
chmod +x /bin/eht41
cp /root/ehtools/eht/eht42 /bin
chmod +x /bin/eht42
cp /root/ehtools/eht/eht43 /bin
chmod +x /bin/eht43
cp /root/ehtools/eht/eht21 /bin
chmod +x /bin/eht21
sleep 0.5
echo -e "Modules added to /bin with success!"
sleep 1
echo -e "Cleaning caches..."
sleep 0.5
echo -e
uiecache --all
echo -e
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 0.5
echo -e "Making /etc/ehtools/modules..."
mkdir /etc/ehtools/modules
sleep 0.5
echo -e "Saving to /etc/ehtools/modules/.config..."
echo eht1 >> /etc/ehtools/modules/.config
echo eht2 >> /etc/ehtools/modules/.config
echo eht3 >> /etc/ehtools/modules/.config
echo eht4 >> /etc/ehtools/modules/.config
echo eht21 >> /etc/ehtools/modules/.config
echo eht31 >> /etc/ehtools/modules/.config
echo eht41 >> /etc/ehtools/modules/.config
echo eht42 >> /etc/ehtools/modules/.config
echo eht43 >> /etc/ehtools/modules/.config
sleep 0.5
echo -e "Saved to /etc/ehtools/modules/.config..."
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 3
echo -e "\e[4;32mPreparing to take snapshot: default_snapshot...\e[0m"
sleep 1
echo -e "Making /etc/ehtools/modules/snapshots..."
mkdir /etc/ehtools/modules/snapshots
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 1
printf '\033]2;Taking...\a'

function ProgressBarksa {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rTaking (${_progress}%%)"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.5
    ProgressBarksa ${number} ${_end}
done

sleep 5
echo -e
sleep 0.5
echo -e "Making /etc/ehtools/modules/snapshots/default_snapshot..."
mkdir /etc/ehtools/modules/snapshots/default_snapshot
sleep 0.5
echo -e "Trying to take snapshot of /root/ehtools/eht..."
cp -r /root/ehtools/eht /etc/ehtools/modules/snapshots/default_snapshot
sleep 0.5
echo -e "Trying to take snapshot of /bin/ehtools..."
cp -r /bin/ehtools /etc/ehtools/modules/snapshots/default_snapshot
chmod +t /etc/ehtools/modules/snapshots
sleep 0.5
echo -e "\e[4;32mSuccess!\e[0m"
sleep 0.5
echo -e "Snapshot 1: \e[4;32m/etc/ehtools/modules/snapshots/dafault_snapshot/eht\e[0m"
echo -e "Snapshot 2: \e[4;32m/etc/ehtools/modules/snapshots/default_snapshot/ehtools\e[0m"
sleep 0.5
echo -e "Finishing and exiting..."
sleep 5
exit
fi

echo -e
echo -e ""$N" INFO: Modules v1.9 is a" 
echo -e ""$N" sandbox for ehtools modules."$CE""
echo -e
echo -e "Usage: modules [OPTION...]"
echo -e "Copyright (C) 2019, Entynetproject. All Rights Reserved."
echo -e
echo -e "   --install         Install ehtools modules to /bin."
echo -e "                       (install ehtools modules)"
echo -e "   --restore <name>  Restore saved ehtools modules snapshot."
echo -e "                       (restore ehtools modules snapshot)"
echo -e "   --take    <name>  Take new ehtools modules snapshot."
echo -e "                       (take ehtools modules snapshot)"
echo -e "   --help            Give this help list."
echo -e
exit
